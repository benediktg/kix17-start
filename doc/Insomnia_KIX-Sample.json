{"_type":"export","__export_format":4,"__export_date":"2021-01-25T10:09:45.859Z","__export_source":"insomnia.desktop.app:v2020.5.2","resources":[{"_id":"req_438ed645b8254789a0fc66784c2b3c03","parentId":"fld_a5cf2f46b00d47179698572dc81b116b","modified":1611564848740,"created":1611555956110,"url":"{{ host  }}/{{ _.webapi_configitem }}/Session","name":"SessionCreate","description":"Creates new Session\n===\nInput\n---\n    {\n        UserLogin         => 'Agent1',\n        CustomerUserLogin => 'Customer1',       # optional, provide UserLogin or CustomerUserLogin\n        Password          => 'some password',   # plain text password\n    }\n\nOutput\n---\n    {\n        SessionID => $SessionID,\n    }","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"UserLogin\": \"mustermann\",\n    \"Password\": \"password\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_0a9702e9c3c04791b90e070cb04f5099"},{"name":"SessionID","value":"{{ _.session }}","description":"","id":"pair_ff46cbb4719e48c3acd5967389d623de"}],"authentication":{},"metaSortKey":-1608130812475,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_a5cf2f46b00d47179698572dc81b116b","parentId":"wrk_7af9c81a87ed40d48da07416021d1841","modified":1611555857887,"created":1611555857887,"name":"GenericCMDBConnectorREST","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1611555857887,"_type":"request_group"},{"_id":"wrk_7af9c81a87ed40d48da07416021d1841","parentId":null,"modified":1611556249042,"created":1594041399410,"name":"KIX17-Sample","description":"Sample webservice configuration for KIX17 CMDB and Ticket via REST","scope":null,"_type":"workspace"},{"_id":"req_a1e155d5d80e4dcfb22c12dbeef34792","parentId":"fld_a5cf2f46b00d47179698572dc81b116b","modified":1611567391919,"created":1608130812156,"url":"{{ host  }}/{{ _.webapi_configitem }}/ConfigItem?SessionID={{ _.ConfigItemSession }}","name":"ConfigItemCreate","description":"Creates new Configuration Item\n===\nInput\n---\n    {\n        UserLogin  => 'some agent login',                 # UserLogin or SessionID is\n                                                          #   required\n        SessionID  => 123,\n\n        Password   => 'some password',                    # if UserLogin is sent then\n                                                          #   Password is required\n        ConfigItem => {\n            Number     => '111',                      # optional\n            Class      => 'Config Item Class',\n            Name       => 'The Name',\n            DeplState  => 'deployment state',\n            InciState  => 'incident state',\n            CIXMLData  => $ArrayHashRef,              # it depends on the Configuration Item class and definition\n\n            Attachment => [\n                {\n                    Content     => 'content'            # base64 encoded\n                    ContentType => 'some content type'\n                    Filename    => 'some fine name'\n                },\n                # ...\n            ]\n            # or\n            # Attachment => {\n            #     Content     => 'content'\n            #     ContentType => 'some content type'\n            #     Filename    => 'some fine name'\n            # }\n        }\n    }\n\nOutput\n---\n    {                                           # result data payload after Operation\n        ConfigItemID => 123,                    # Configuration Item ID number in KIX\n        Number       => 2324454323322           # Configuration Item Number in KIX\n\n        Error => {                              # should not return errors\n            ErrorCode    => 'ConfigItemCreate.ErrorCode'\n            ErrorMessage => 'Error Description'\n        }\n    }","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"ConfigItem\": {\n        \"Class\": \"Computer\",\n        \"Name\": \"REST Create Test\",\n        \"InciState\": \"Operational\",\n        \"DeplState\": \"Planned\",\n        \"CIXMLData\": {\n            \"Vendor\": \"Vendor\",\n\t\t\t\t    \"Model\": \"Model\",\n\t\t\t\t    \"Description\": \"Description\"\n        }\n    }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_12fc51768e284417b0c6c0ded8329819"}],"authentication":{},"metaSortKey":-1608130812425,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_6d7cebb2d1244422a6ae522c4f704d64","parentId":"fld_a5cf2f46b00d47179698572dc81b116b","modified":1611563450924,"created":1608130822982,"url":"{{ host  }}/{{ _.webapi_configitem }}/ConfigItem/{{ _.ConfigItemID }}?SessionID={{ _.ConfigItemSession }}","name":"ConfigItemGet","description":"Get details of Configuration Items\n===\nInput\n---\n    {\n        UserLogin    => 'some agent login',                            # UserLogin or SessionID is\n        SessionID    => 123,                                           #   required\n        Password     => 'some password',                               # if UserLogin is sent then Password is required\n        ConfigItemID => '32,33',                                       # required, could be coma separated IDs or an Array\n        Attachments  => 1,                                             # Optional, 1 as default. If it's set with the value 1,\n                                                                       # attachments for articles will be included on ConfigItem data\n    }\n\nOutput\n---\n    {\n        ConfigItem => [\n            {\n                Number           => '20101027000001',\n                ConfigItemID     => 123,\n                Name             => 'some name',\n                Class            => 'some class',\n                VersionID        => 123,\n                LastVersionID    => 123,\n                DefinitionID     => 123,\n                InciState        => 'some incident state',\n                InciStateType    => 'some incident state type',\n                DeplState        => 'some deployment state',\n                DeplStateType    => 'some deployment state type',\n                CurInciState     => 'some incident state',\n                CurInciStateType => 'some incident state type',\n                CurDeplState     => 'some deployment state',\n                CurDeplStateType => 'some deployment state type',\n                CreateTime       => '2010-10-27 20:15:00'\n                CreateBy         => 123,\n                CIXMLData        => $XMLDataHashRef,\n\n                Attachment       => [\n                    {\n                        Content     => \"xxxx\",     # actual attachment contents, base64 enconded\n                        ContentType => \"application/pdf\",\n                        Filename    => \"StdAttachment-Test1.pdf\",\n                        Filesize    => \"4.6 KBytes\",\n                        Preferences => $PreferencesHashRef,\n                    },\n                    {\n                       # . . .\n                    },\n                ],\n            },\n            {\n                # . . .\n            }\n        ]\n    }","method":"GET","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_5e76adc516a9413db1b35969f9a87350"}],"authentication":{},"metaSortKey":-1608130812400,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_98a2b533f88e400cb38656a1dee1b664","parentId":"fld_a5cf2f46b00d47179698572dc81b116b","modified":1611567432161,"created":1608130838092,"url":"{{ host  }}/{{ _.webapi_configitem }}/ConfigItem/Search?SessionID={{ _.ConfigItemSession }}","name":"ConfigItemSearch","description":"Search for Configuration Items\n===\nInput\n---\n    {\n        UserLogin  => 'some agent login',                               # UserLogin or SessionID is\n        SessionID  => 123,                                              #   required\n\n        Password   => 'some password',                                  # if UserLogin is sent then\n                                                                        #   Password is required\n        ConfigItem => {\n            Class        => 'The ConfigItem Class',                     # (optional)\n            Number       => 'The ConfigItem Number',                    # (optional)\n            Name         => 'The ConfigItem Name',                      # (optional)\n            DeplStates   => ['deployment state'],                       # (optional)\n            InciStates   => ['incident state'],                         # (optional)\n\n            # config items with created time after ...\n            ConfigItemCreateTimeNewerDate => '2006-01-09 00:00:01',     # (optional)\n\n            # config items with created time before then ....\n            ConfigItemCreateTimeOlderDate => '2006-01-19 23:59:59',     # (optional)\n\n            # config items with changed time after ...\n            ConfigItemChangeTimeNewerDate => '2006-01-09 00:00:01',     # (optional)\n\n            # config items with changed time before then ....\n            ConfigItemChangeTimeOlderDate => '2006-01-19 23:59:59',     # (optional)\n\n            CIXMLData    => $ArrayHashRef,                              # (optional), it depends on the Configuration\n                                                                        #   Item class and definition\n\n            PreviousVersionSearch => 1,                                 # (optional) default 0 (0|1)\n\n            OrderBy => [ 'ConfigItemID', 'Number' ],                    # (optional)\n            # default: [ 'ConfigItemID' ]\n            # (ConfigItemID, Number, ClassID, DeplStateID, InciStateID,\n            # CreateTime, CreateBy, ChangeTime, ChangeBy)\n\n            # Additional information for OrderBy:\n            # The OrderByDirection can be specified for each OrderBy attribute.\n            # The pairing is made by the array indices.\n\n            OrderByDirection => [ 'Down', 'Up' ],                       # (optional)\n            # default: [ 'Down' ]\n            # (Down | Up)\n\n            Limit          => 122                                       # (optional)\n        }\n    }\n\nOutput\n---\n    {                                       # result data payload after Operation\n        ConfigItemID => [123, 456]          # Configuration Item ID numbers in KIX\n\n        Error => {                              # should not return errors\n                ErrorCode    => 'ConfigItemSearch.ErrorCode'\n                ErrorMessage => 'Error Description'\n        }\n    }","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"ConfigItem\": {\n        \"Class\": \"Computer\",\n        \"InciState\": \"Operational\"\n    }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_5486f8217568440da79389ac5f02e45a"}],"authentication":{},"metaSortKey":-1608130812375,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b833ffcbedf74a3da143d7fc2748edf5","parentId":"fld_a5cf2f46b00d47179698572dc81b116b","modified":1611567446731,"created":1608130831917,"url":"{{ host  }}/{{ _.webapi_configitem }}/ConfigItem/{{ _.ConfigItemID }}?SessionID={{ _.ConfigItemSession }}","name":"ConfigItemUpdate","description":"Updates existing Configuration Item\n===\nInput\n---\n    {\n        UserLogin           => 'some agent login',      # UserLogin or SessionID is\n        SessionID           => 123,                     #   required\n\n        Password            => 'some password',         # if UserLogin is sent then Password is required\n\n        ReplaceExistingData => 0,                       # optional, 0 or 1, default 0\n                                                        # this will replace the existing XML data and attachments\n        ConfigItemID        => 123,\n\n        ConfigItem          => {\n            Class      => 'Config Item Class',\n            Name       => 'The Name',\n            DeplState  => 'deployment state',\n            InciState  => 'incident state',\n            CIXMLData  => $ArrayHashRef,                # it depends on the Configuration Item class and definition\n\n            Attachment => [\n                {\n                    Content     => 'content'            # base64 encoded\n                    ContentType => 'some content type'\n                    Filename    => 'some fine name'\n                },\n                # ...\n            ]\n            # or\n            # Attachment => {\n            #    Content     => 'content'\n            #    ContentType => 'some content type'\n            #    Filename    => 'some fine name'\n            # }\n        }\n    }\n\nOutput\n---\n    {                        # result data payload after Operation\n        ConfigItemID => 123,                    # Configuration Item ID number in KIX\n        Number       => 2324454323322           # Configuration Item Number in KIX\n\n        Error => {                              # should not return errors\n            ErrorCode    => 'ConfigItemUpdate.ErrorCode'\n            ErrorMessage => 'Error Description'\n        }\n    }","method":"PUT","body":{"mimeType":"application/json","text":"{\n    \"ConfigItem\": {\n        \"Class\": \"Computer\",\n        \"Name\": \"REST Update Test\",\n        \"InciState\": \"Incident\",\n        \"DeplState\": \"Repair\",\n        \"CIXMLData\": {\n            \"Vendor\": \"Vendor\",\n\t\t\t\t    \"Model\": \"Model\",\n\t\t\t\t    \"Description\": \"Defect CPU\"\n        }\n    }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_45f3b6dd7790404c88436f944427da86"}],"authentication":{},"metaSortKey":-1608130812325,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_0fa2ed20678b4f0e82a621548087f52e","parentId":"fld_cf81f1dc24d24b908875c45e92bb2fed","modified":1611565055285,"created":1608127072904,"url":"{{ host  }}/{{ _.webapi_ticket }}/Session","name":"SessionCreate","description":"Creates new Session\n===\nInput\n---\n    {\n        UserLogin         => 'Agent1',\n        CustomerUserLogin => 'Customer1',       # optional, provide UserLogin or CustomerUserLogin\n        Password          => 'some password',   # plain text password\n    }\n\nOutput\n---\n    {\n        SessionID => $SessionID,\n    }","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"UserLogin\": \"mustermann\",\n    \"Password\": \"password\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_0a9702e9c3c04791b90e070cb04f5099"},{"name":"SessionID","value":"{{ _.session }}","description":"","id":"pair_ff46cbb4719e48c3acd5967389d623de"}],"authentication":{},"metaSortKey":-1611555777340.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_cf81f1dc24d24b908875c45e92bb2fed","parentId":"wrk_7af9c81a87ed40d48da07416021d1841","modified":1611555804146,"created":1611555777128,"name":"GenericTicketConnectorREST","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1611555777190.5,"_type":"request_group"},{"_id":"req_a40b7b840de8462abdf0f2f7ddfda970","parentId":"fld_cf81f1dc24d24b908875c45e92bb2fed","modified":1611567351659,"created":1608129248222,"url":"{{ host  }}/{{ _.webapi_ticket }}/Ticket?SessionID={{ _.TicketSession }}","name":"TicketCreate","description":"Creates new Ticket\n===\nInput\n---\n    {\n        UserLogin         => 'some agent login',                            # UserLogin or CustomerUserLogin or SessionID is\n                                                                            #   required\n        CustomerUserLogin => 'some customer login',\n        SessionID         => 123,\n\n        Password          => 'some password',                               # if UserLogin or CustomerUserLogin is sent then\n                                                                            #   Password is required\n\n        Ticket            => {\n            Title      => 'some ticket title',\n\n            QueueID       => 123,                                           # QueueID or Queue is required\n            Queue         => 'some queue name',\n\n            LockID        => 123,                                           # optional\n            Lock          => 'some lock name',                              # optional\n            TypeID        => 123,                                           # optional\n            Type          => 'some type name',                              # optional\n            ServiceID     => 123,                                           # optional\n            Service       => 'some service name',                           # optional\n            SLAID         => 123,                                           # optional\n            SLA           => 'some SLA name',                               # optional\n\n            StateID       => 123,                                           # StateID or State is required\n            State         => 'some state name',\n\n            PriorityID    => 123,                                           # PriorityID or Priority is required\n            Priority      => 'some priority name',\n\n            OwnerID       => 123,                                           # optional\n            Owner         => 'some user login',                             # optional\n            ResponsibleID => 123,                                           # optional\n            Responsible   => 'some user login',                             # optional\n            CustomerUser  => 'some customer user login',\n\n            PendingTime   => {                                              # optional\n                Year   => 2011,\n                Month  => 12\n                Day    => 03,\n                Hour   => 23,\n                Minute => 05,\n            },\n            # or\n            # PendingTime => {\n            #     Diff => 10080,                                            # Pending time in minutes\n            # },\n        },\n\n        Article => {\n            ArticleTypeID                   => 123,                         # optional\n            ArticleType                     => 'some article type name',    # optional\n            SenderTypeID                    => 123,                         # optional\n            SenderType                      => 'some sender type name',     # optional\n            AutoResponseType                => 'some auto response type',   # optional\n            From                            => 'some from string',          # optional\n            Subject                         => 'some subject',\n            Body                            => 'some body'\n\n            ContentType                     => 'some content type',         # ContentType or MimeType and Charset is requieed\n            MimeType                        => 'some mime type',\n            Charset                         => 'some charset',\n\n            HistoryType                     => 'some history type',         # optional\n            HistoryComment                  => 'Some  history comment',     # optional\n            TimeUnit                        => 123,                         # optional\n            NoAgentNotify                   => 1,                           # optional\n            ForceNotificationToUserID       => [1, 2, 3]                    # optional\n            ExcludeNotificationToUserID     => [1, 2, 3]                    # optional\n            ExcludeMuteNotificationToUserID => [1, 2, 3]                    # optional\n        },\n\n        DynamicField => [                                                   # optional\n            {\n                Name   => 'some name',\n                Value  => $Value,                                           # value type depends on the dynamic field\n            },\n            # ...\n        ],\n        # or\n        # DynamicField => {\n        #    Name   => 'some name',\n        #    Value  => $Value,\n        # },\n\n        Attachment => [\n            {\n                Content     => 'content'                                    # base64 encoded\n                ContentType => 'some content type'\n                Filename    => 'some fine name'\n            },\n            # ...\n        ]\n        # or\n        # Attachment => {\n        #     Content     => 'content'\n        #     ContentType => 'some content type'\n        #     Filename    => 'some fine name'\n        # }\n    }\n\nOutput\n---\n    {                        # result data payload after Operation\n        TicketID     => 123,                     # Ticket ID number in KIX\n        TicketNumber => 2324454323322,           # Ticket Number in KIX\n        ArticleID    => 43                       # Article ID number in KIX\n\n        Error => {                               # should not return errors\n            ErrorCode    => 'Ticket.Create.ErrorCode'\n            ErrorMessage => 'Error Description'\n        }\n    }","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"Ticket\" : {\n        \"Queue\" : \"Raw\",\n        \"Priority\" : \"3 normal\",\n        \"CustomerUser\" : \"mustermann\",\n        \"Title\" : \"REST Create Test\",\n        \"State\" : \"open\",\n        \"Type\" : \"Unclassified\"\n    },\n    \"Article\" : {\n        \"ContentType\" : \"text/plain; charset=utf8\",\n        \"Subject\" : \"Rest Create Test\",\n        \"Body\" : \"This is only a test\",\n        \"TimeUnit\" : \"2\"\n    }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_af360576112742f6927a223ab6b0c91d"}],"authentication":{},"metaSortKey":-1611555777290.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c07d6869eec5402abf805022e10553f5","parentId":"fld_cf81f1dc24d24b908875c45e92bb2fed","modified":1611568048241,"created":1608127874873,"url":"{{ host  }}/{{ _.webapi_ticket }}/Ticket/{{ _.TicketID }}?SessionID={{ _.TicketSession }}","name":"TicketGet","description":"Get details of Tickets\n===\nInput\n---\n    {\n        UserLogin            => 'some agent login',                            # UserLogin or CustomerUserLogin or SessionID is\n                                                                               #   required\n        CustomerUserLogin    => 'some customer login',\n        SessionID            => 123,\n\n        Password             => 'some password',                               # if UserLogin or customerUserLogin is sent then\n                                                                               #   Password is required\n        TicketID             => '32,33',                                       # required, could be coma separated IDs or an Array\n        DynamicFields        => 0,                                             # Optional, 0 as default. Indicate if Dynamic Fields\n                                                                               #     should be included or not on the ticket content.\n        Extended             => 1,                                             # Optional, 0 as default\n        AllArticles          => 1,                                             # Optional, 0 as default. Set as 1 will include articles\n                                                                               #     for tickets.\n        ArticleSenderType    => [ $ArticleSenderType1, $ArticleSenderType2 ],  # Optional, only requested article sender types\n        ArticleOrder         => 'DESC',                                        # Optional, DESC,ASC - default is ASC\n        ArticleLimit         => 5,                                             # Optional\n        Attachments          => 1,                                             # Optional, 1 as default. If it's set with the value 1,\n                                                                               # attachments for articles will be included on ticket data\n        HTMLBodyAsAttachment => 1                                              # Optional, If enabled the HTML body version of each article\n                                                                               #    is added to the attachments list\n    }\n\nOutput\n---\n    {\n        Ticket => [\n            {\n                TicketNumber       => '20101027000001',\n                Title              => 'some title',\n                TicketID           => 123,\n                State              => 'some state',\n                StateID            => 123,\n                StateType          => 'some state type',\n                Priority           => 'some priority',\n                PriorityID         => 123,\n                Lock               => 'lock',\n                LockID             => 123,\n                Queue              => 'some queue',\n                QueueID            => 123,\n                CustomerID         => 'customer_id_123',\n                CustomerUserID     => 'customer_user_id_123',\n                Owner              => 'some_owner_login',\n                OwnerID            => 123,\n                Type               => 'some ticket type',\n                TypeID             => 123,\n                SLA                => 'some sla',\n                SLAID              => 123,\n                Service            => 'some service',\n                ServiceID          => 123,\n                Responsible        => 'some_responsible_login',\n                ResponsibleID      => 123,\n                Age                => 3456,\n                Created            => '2010-10-27 20:15:00'\n                CreateTimeUnix     => '1231414141',\n                CreateBy           => 123,\n                Changed            => '2010-10-27 20:15:15',\n                ChangeBy           => 123,\n                ArchiveFlag        => 'y',\n\n                # If DynamicFields => 1 was passed, you'll get an entry like this for each dynamic field:\n                DynamicField => [\n                    {\n                        Name  => 'some name',\n                        Value => 'some value',\n                    },\n                ],\n\n                # (time stamps of expected escalations)\n                EscalationResponseTime           (unix time stamp of response time escalation)\n                EscalationUpdateTime             (unix time stamp of update time escalation)\n                EscalationSolutionTime           (unix time stamp of solution time escalation)\n\n                # (general escalation info of nearest escalation type)\n                EscalationDestinationIn          (escalation in e. g. 1h 4m)\n                EscalationDestinationTime        (date of escalation in unix time, e. g. 72193292)\n                EscalationDestinationDate        (date of escalation, e. g. \"2009-02-14 18:00:00\")\n                EscalationTimeWorkingTime        (seconds of working/service time till escalation, e. g. \"1800\")\n                EscalationTime                   (seconds total till escalation of nearest escalation time type - response, update or solution time, e. g. \"3600\")\n\n                # (detailed escalation info about first response, update and solution time)\n                FirstResponseTimeEscalation      (if true, ticket is escalated)\n                FirstResponseTimeNotification    (if true, notify - x% of escalation has reached)\n                FirstResponseTimeDestinationTime (date of escalation in unix time, e. g. 72193292)\n                FirstResponseTimeDestinationDate (date of escalation, e. g. \"2009-02-14 18:00:00\")\n                FirstResponseTimeWorkingTime     (seconds of working/service time till escalation, e. g. \"1800\")\n                FirstResponseTime                (seconds total till escalation, e. g. \"3600\")\n\n                UpdateTimeEscalation             (if true, ticket is escalated)\n                UpdateTimeNotification           (if true, notify - x% of escalation has reached)\n                UpdateTimeDestinationTime        (date of escalation in unix time, e. g. 72193292)\n                UpdateTimeDestinationDate        (date of escalation, e. g. \"2009-02-14 18:00:00\")\n                UpdateTimeWorkingTime            (seconds of working/service time till escalation, e. g. \"1800\")\n                UpdateTime                       (seconds total till escalation, e. g. \"3600\")\n\n                SolutionTimeEscalation           (if true, ticket is escalated)\n                SolutionTimeNotification         (if true, notify - x% of escalation has reached)\n                SolutionTimeDestinationTime      (date of escalation in unix time, e. g. 72193292)\n                SolutionTimeDestinationDate      (date of escalation, e. g. \"2009-02-14 18:00:00\")\n                SolutionTimeWorkingTime          (seconds of working/service time till escalation, e. g. \"1800\")\n                SolutionTime                     (seconds total till escalation, e. g. \"3600\")\n\n                # if you use param Extended to get extended ticket attributes\n                FirstResponse                   (timestamp of first response, first contact with customer)\n                FirstResponseInMin              (minutes till first response)\n                FirstResponseDiffInMin          (minutes till or over first response)\n\n                SolutionTime                    (timestamp of solution time, also close time)\n                SolutionInMin                   (minutes till solution time)\n                SolutionDiffInMin               (minutes till or over solution time)\n\n                FirstLock                       (timestamp of first lock)\n\n                Article => [\n                    {\n                        ArticleID\n                        From\n                        To\n                        Cc\n                        Subject\n                        Body\n                        ReplyTo\n                        MessageID\n                        InReplyTo\n                        References\n                        SenderType\n                        SenderTypeID\n                        ArticleType\n                        ArticleTypeID\n                        ContentType\n                        Charset\n                        MimeType\n                        IncomingTime\n\n                        # If DynamicFields => 1 was passed, you'll get an entry like this for each dynamic field:\n                        DynamicField => [\n                            {\n                                Name  => 'some name',\n                                Value => 'some value',\n                            },\n                        ],\n\n                        Attachment => [\n                            {\n                                Content            => \"xxxx\",     # actual attachment contents, base64 enconded\n                                ContentAlternative => \"\",\n                                ContentID          => \"\",\n                                ContentType        => \"application/pdf\",\n                                Filename           => \"StdAttachment-Test1.pdf\",\n                                Filesize           => \"4.6 KBytes\",\n                                FilesizeRaw        => 4722,\n                            },\n                            # . . .\n                        ]\n                    },\n                    # . . .\n                ]\n            },\n            # . . .\n        ]\n    }","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1611555777265.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_bc385d86afa2421ab550e7c4896f19c5","parentId":"fld_cf81f1dc24d24b908875c45e92bb2fed","modified":1611568318716,"created":1608129281238,"url":"{{ host  }}/{{ _.webapi_ticket }}/Ticket?SessionID={{ _.TicketSession }}","name":"TicketSearch","description":"Search for Tickets\n===\nInput\n---\n    {\n        # ticket number (optional) as STRING or as ARRAYREF\n        TicketNumber => '%123546%',\n        TicketNumber => ['%123546%', '%123666%'],\n\n        # ticket title (optional) as STRING or as ARRAYREF\n        Title => '%SomeText%',\n        Title => ['%SomeTest1%', '%SomeTest2%'],\n\n        Queues   => ['system queue', 'other queue'],\n        QueueIDs => [1, 42, 512],\n\n        # use also sub queues of Queue|Queues in search\n        UseSubQueues => 0,\n\n        # You can use types like normal, ...\n        Types   => ['normal', 'change', 'incident'],\n        TypeIDs => [3, 4],\n\n        # You can use states like new, open, pending reminder, ...\n        States   => ['new', 'open'],\n        StateIDs => [3, 4],\n\n        # (Open|Closed) tickets for all closed or open tickets.\n        StateType => 'Open',\n\n        # You also can use real state types like new, open, closed,\n        # pending reminder, pending auto, removed and merged.\n        StateType    => ['open', 'new'],\n        StateTypeIDs => [1, 2, 3],\n\n        Priorities  => ['1 very low', '2 low', '3 normal'],\n        PriorityIDs => [1, 2, 3],\n\n        Services   => ['Service A', 'Service B'],\n        ServiceIDs => [1, 2, 3],\n\n        SLAs   => ['SLA A', 'SLA B'],\n        SLAIDs => [1, 2, 3],\n\n        Locks   => ['unlock'],\n        LockIDs => [1, 2, 3],\n\n        OwnerIDs => [1, 12, 455, 32]\n\n        ResponsibleIDs => [1, 12, 455, 32]\n\n        WatchUserIDs => [1, 12, 455, 32]\n\n        # CustomerID (optional) as STRING or as ARRAYREF\n        CustomerID => '123',\n        CustomerID => ['123', 'ABC'],\n\n        # CustomerUserLogin (optional) as STRING as ARRAYREF\n        CustomerUserLogin => 'uid123',\n        CustomerUserLogin => ['uid123', 'uid777'],\n\n        # create ticket properties (optional)\n        CreatedUserIDs     => [1, 12, 455, 32]\n        CreatedTypes       => ['normal', 'change', 'incident'],\n        CreatedTypeIDs     => [1, 2, 3],\n        CreatedPriorities  => ['1 very low', '2 low', '3 normal'],\n        CreatedPriorityIDs => [1, 2, 3],\n        CreatedStates      => ['new', 'open'],\n        CreatedStateIDs    => [3, 4],\n        CreatedQueues      => ['system queue', 'other queue'],\n        CreatedQueueIDs    => [1, 42, 512],\n\n        # DynamicFields\n        #   At least one operator must be specified. Operators will be connected with AND,\n        #       values in an operator with OR.\n        #   You can also pass more than one argument to an operator: ['value1', 'value2']\n        DynamicField_FieldNameX => {\n            Equals            => 123,\n            Like              => 'value*',                # \"equals\" operator with wildcard support\n            GreaterThan       => '2001-01-01 01:01:01',\n            GreaterThanEquals => '2001-01-01 01:01:01',\n            SmallerThan       => '2002-02-02 02:02:02',\n            SmallerThanEquals => '2002-02-02 02:02:02',\n        }\n\n        # article stuff (optional)\n        From    => '%spam@example.com%',\n        To      => '%service@example.com%',\n        Cc      => '%client@example.com%',\n        Subject => '%VIRUS 32%',\n        Body    => '%VIRUS 32%',\n\n        # attachment stuff (optional, applies only for ArticleStorageDB)\n        AttachmentName => '%anyfile.txt%',\n\n        # use full article text index if configured (optional, default off)\n        FullTextIndex => 1,\n\n        # article content search (AND or OR for From, To, Cc, Subject and Body) (optional)\n        ContentSearch => 'AND',\n\n        # content conditions for From,To,Cc,Subject,Body\n        # Title,CustomerID and CustomerUserLogin (all optional)\n        ConditionInline => 1,\n\n        # articles created more than 60 minutes ago (article older than 60 minutes) (optional)\n        ArticleCreateTimeOlderMinutes => 60,\n        # articles created less than 120 minutes ago (article newer than 60 minutes) (optional)\n        ArticleCreateTimeNewerMinutes => 120,\n\n        # articles with create time after ... (article newer than this date) (optional)\n        ArticleCreateTimeNewerDate => '2006-01-09 00:00:01',\n        # articles with created time before ... (article older than this date) (optional)\n        ArticleCreateTimeOlderDate => '2006-01-19 23:59:59',\n\n        # tickets created more than 60 minutes ago (ticket older than 60 minutes)  (optional)\n        TicketCreateTimeOlderMinutes => 60,\n        # tickets created less than 120 minutes ago (ticket newer than 120 minutes) (optional)\n        TicketCreateTimeNewerMinutes => 120,\n\n        # tickets with create time after ... (ticket newer than this date) (optional)\n        TicketCreateTimeNewerDate => '2006-01-09 00:00:01',\n        # tickets with created time before ... (ticket older than this date) (optional)\n        TicketCreateTimeOlderDate => '2006-01-19 23:59:59',\n\n        # ticket history entries that created more than 60 minutes ago (optional)\n        TicketChangeTimeOlderMinutes => 60,\n        # ticket history entries that created less than 120 minutes ago (optional)\n        TicketChangeTimeNewerMinutes => 120,\n\n        # tickets changed more than 60 minutes ago (optional)\n        TicketLastChangeTimeOlderMinutes => 60,\n        # tickets changed less than 120 minutes ago (optional)\n        TicketLastChangeTimeNewerMinutes => 120,\n\n        # tickets with changed time after ... (ticket changed newer than this date) (optional)\n        TicketLastChangeTimeNewerDate => '2006-01-09 00:00:01',\n        # tickets with changed time before ... (ticket changed older than this date) (optional)\n        TicketLastChangeTimeOlderDate => '2006-01-19 23:59:59',\n\n        # ticket history entry create time after ... (ticket history entries newer than this date) (optional)\n        TicketChangeTimeNewerDate => '2006-01-09 00:00:01',\n        # ticket history entry create time before ... (ticket history entries older than this date) (optional)\n        TicketChangeTimeOlderDate => '2006-01-19 23:59:59',\n\n        # tickets closed more than 60 minutes ago (optional)\n        TicketCloseTimeOlderMinutes => 60,\n        # tickets closed less than 120 minutes ago (optional)\n        TicketCloseTimeNewerMinutes => 120,\n\n        # tickets with closed time after ... (ticket closed newer than this date) (optional)\n        TicketCloseTimeNewerDate => '2006-01-09 00:00:01',\n        # tickets with closed time before ... (ticket closed older than this date) (optional)\n        TicketCloseTimeOlderDate => '2006-01-19 23:59:59',\n\n        # tickets with pending time of more than 60 minutes ago (optional)\n        TicketPendingTimeOlderMinutes => 60,\n        # tickets with pending time of less than 120 minutes ago (optional)\n        TicketPendingTimeNewerMinutes => 120,\n\n        # tickets with pending time after ... (optional)\n        TicketPendingTimeNewerDate => '2006-01-09 00:00:01',\n        # tickets with pending time before ... (optional)\n        TicketPendingTimeOlderDate => '2006-01-19 23:59:59',\n\n        # you can use all following escalation options with this four different ways of escalations\n        # TicketEscalationTime...\n        # TicketEscalationUpdateTime...\n        # TicketEscalationResponseTime...\n        # TicketEscalationSolutionTime...\n\n        # ticket escalation time of more than 60 minutes ago (optional)\n        TicketEscalationTimeOlderMinutes => -60,\n        # ticket escalation time of less than 120 minutes ago (optional)\n        TicketEscalationTimeNewerMinutes => -120,\n\n        # tickets with escalation time after ... (optional)\n        TicketEscalationTimeNewerDate => '2006-01-09 00:00:01',\n        # tickets with escalation time before ... (optional)\n        TicketEscalationTimeOlderDate => '2006-01-09 23:59:59',\n\n        # search in archive (optional)\n        ArchiveFlags => ['y', 'n'],\n\n        # OrderBy and SortBy (optional)\n        OrderBy => 'Down',  # Down|Up\n        SortBy  => 'Age',   # Owner|Responsible|CustomerID|State|TicketNumber|Queue|Priority|Age|Type|Lock\n                            # Changed|Title|Service|SLA|PendingTime|EscalationTime\n                            # EscalationUpdateTime|EscalationResponseTime|EscalationSolutionTime\n                            # DynamicField_FieldNameX\n                            # TicketFreeTime1-6|TicketFreeKey1-16|TicketFreeText1-16\n\n        # OrderBy and SortBy as ARRAY for sub sorting (optional)\n        OrderBy => ['Down', 'Up'],\n        SortBy  => ['Priority', 'Age'],\n    }\n\nOutput\n---\n    {\n        TicketID => [ 1, 2, 3, 4 ]\n    }","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"StateType\": \"Open\",\n    \"OrderBy\": \"Down\",\n    \"SortBy\": \"Title\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_13761c19924b4d22a18cbfbdccf7234f"}],"authentication":{},"metaSortKey":-1611555777240.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8ea6c3a875f84b7f9e05b298d2c301f9","parentId":"fld_cf81f1dc24d24b908875c45e92bb2fed","modified":1611568912307,"created":1608129288116,"url":"{{ host  }}/{{ _.webapi_ticket }}/Ticket/{{ _.TicketID }}?SessionID={{ _.TicketSession }}","name":"TicketUpdate","description":"Updates existing Ticket\n===\nInput\n---\n    {\n        UserLogin         => 'some agent login',                            # UserLogin or CustomerUserLogin or SessionID is\n                                                                            #   required\n        CustomerUserLogin => 'some customer login',\n        SessionID         => 123,\n\n        Password          => 'some password',                               # if UserLogin or customerUserLogin is sent then\n                                                                            #   Password is required\n\n        TicketID          => 123,                                           # TicketID or TicketNumber is required\n        TicketNumber      => '2004040510440485',\n\n        Ticket            => {                                              # optional\n            Title         => 'some ticket title',\n\n            QueueID       => 123,                                           # Optional\n            Queue         => 'some queue name',                             # Optional\n            LockID        => 123,                                           # optional\n            Lock          => 'some lock name',                              # optional\n            TypeID        => 123,                                           # optional\n            Type          => 'some type name',                              # optional\n            ServiceID     => 123,                                           # optional\n            Service       => 'some service name',                           # optional\n            SLAID         => 123,                                           # optional\n            SLA           => 'some SLA name',                               # optional\n            StateID       => 123,                                           # optional\n            State         => 'some state name',                             # optional\n            PriorityID    => 123,                                           # optional\n            Priority      => 'some priority name',                          # optional\n            OwnerID       => 123,                                           # optional\n            Owner         => 'some user login',                             # optional\n            ResponsibleID => 123,                                           # optional\n            Responsible   => 'some user login',                             # optional\n            CustomerUser  => 'some customer user login',\n\n            PendingTime   => {                                              # optional\n                Year   => 2011,\n                Month  => 12\n                Day    => 03,\n                Hour   => 23,\n                Minute => 05,\n            },\n            # or\n            # PendingTime   => {\n            #     Diff => 10080,                                            # Pending time in minutes\n            # },\n        },\n\n        Article       => {                                                  # optional\n            ArticleTypeID                   => 123,                         # optional\n            ArticleType                     => 'some article type name',    # optional\n            SenderTypeID                    => 123,                         # optional\n            SenderType                      => 'some sender type name',     # optional\n            AutoResponseType                => 'some auto response type',   # optional\n            From                            => 'some from string',          # optional\n            Subject                         => 'some subject',\n            Body                            => 'some body',\n\n            ContentType                     => 'some content type',         # ContentType or MimeType and Charset is required\n            MimeType                        => 'some mime type',\n            Charset                         => 'some charset',\n\n            HistoryType                     => 'some history type',         # optional\n            HistoryComment                  => 'Some history comment',      # optional\n            TimeUnit                        => 123,                         # optional\n            NoAgentNotify                   => 1,                           # optional\n            ForceNotificationToUserID       => [1, 2, 3],                   # optional\n            ExcludeNotificationToUserID     => [1, 2, 3],                   # optional\n            ExcludeMuteNotificationToUserID => [1, 2, 3]                    # optional\n        },\n\n        DynamicField => [                                                   # optional\n            {\n                Name   => 'some name',\n                Value  => $Value                                            # value type depends on the dynamic field\n            },\n            # ...\n        ],\n        # or\n        # DynamicField {\n        #    Name   => 'some name',\n        #    Value  => $Value\n        # },\n\n        Attachment [\n            {\n                Content     => 'content',                                # base64 encoded\n                ContentType => 'some content type',\n                Filename    => 'some fine name'\n            },\n            # ...\n        ]\n        # or\n        # Attachment {\n        #     Content     => 'content',\n        #     ContentType => 'some content type',\n        #     Filename    => 'some fine name'\n        # }\n    }\n\nOutput\n---\n    {                                           # result data payload after Operation\n        TicketID    => 123,                     # Ticket ID number in KIX\n        ArticleID   => 43                       # Article ID number in KIX\n\n        Error => {                              # should not return errors\n            ErrorCode    => 'TicketUpdate.ErrorCode'\n            ErrorMessage => 'Error Description'\n        }\n    }","method":"PUT","body":{"mimeType":"application/json","text":"{\n    \"Ticket\" : {\n        \"Queue\" : \"Mist\",\n        \"Priority\" : \"3 normal\",\n        \"CustomerUser\" : \"mustermann\",\n        \"Title\" : \"REST Update Test\",\n        \"State\" : \"open\",\n        \"Type\" : \"Unclassified\"\n    }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_2449e3e4a67b4b2b988bd6d86a0f6bce"}],"authentication":{},"metaSortKey":-1611555777190.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_e20911c6c110aa2651740ff3c4195603f922f47b","parentId":"wrk_7af9c81a87ed40d48da07416021d1841","modified":1611563400837,"created":1594041399674,"name":"Base Environment","data":{"ConfigItemID":"{% response 'body', 'req_a1e155d5d80e4dcfb22c12dbeef34792', 'b64::JC5Db25maWdJdGVtSUQ=::46b', 'no-history', 3600 %}","ConfigItemSession":"{% response 'body', 'req_438ed645b8254789a0fc66784c2b3c03', 'b64::JC5TZXNzaW9uSUQ=::46b', 'when-expired', 3600 %}","TicketID":"{% response 'body', 'req_a40b7b840de8462abdf0f2f7ddfda970', 'b64::JC5UaWNrZXRJRA==::46b', 'no-history', 3600 %}","TicketSession":"{% response 'body', 'req_0fa2ed20678b4f0e82a621548087f52e', 'b64::JC5TZXNzaW9uSUQ=::46b', 'when-expired', 3600 %}","host":"localhost","webapi_ticket":"kix/nph-genericinterface.pl/Webservice/GenericTicketConnectorREST","webapi_configitem":"kix/nph-genericinterface.pl/Webservice/GenericCMDBConnectorREST"},"dataPropertyOrder":{"&":["ConfigItemID","ConfigItemSession","TicketID","TicketSession","host","webapi_ticket","webapi_configitem"]},"color":null,"isPrivate":false,"metaSortKey":1594041399674,"_type":"environment"},{"_id":"jar_e20911c6c110aa2651740ff3c4195603f922f47b","parentId":"wrk_7af9c81a87ed40d48da07416021d1841","modified":1594041399681,"created":1594041399681,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_14030c3e376348409fb0a90bc7a53afe","parentId":"wrk_7af9c81a87ed40d48da07416021d1841","modified":1607525350207,"created":1607525350207,"fileName":"KIX17","contents":"","contentType":"yaml","_type":"api_spec"}]}